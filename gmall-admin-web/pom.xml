<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <parent>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-parent</artifactId>
        <version>2.1.4.RELEASE</version>
        <relativePath/> <!-- lookup parent from repository -->
    </parent>
    <groupId>com.atguigu.gmall</groupId>
    <artifactId>gmall-admin-web</artifactId>
    <version>0.0.1-SNAPSHOT</version>
    <name>gmall-admin-web</name>
    <description>后台管理系统对接前端的web项目</description>

    <properties>
        <java.version>1.8</java.version>
        <dockerHost>http://192.168.159.128:2375</dockerHost>
    </properties>

    <dependencies>

        <!--1、引入api-->
        <dependency>
            <groupId>com.atguigu.gmall</groupId>
            <artifactId>gmall-api</artifactId>
            <version>1.0-SNAPSHOT</version>
            <!--排除依赖，我们必须用这个 -->
            <!--<exclusions>-->
                <!--<exclusion>-->
                    <!--<groupId>com.baomidou</groupId>-->
                    <!--<artifactId>mybatis-plus-boot-starter</artifactId>-->
                <!--</exclusion>-->
            <!--</exclusions>-->
        </dependency>

        <!-- 阿里云OSS -->
        <dependency>
            <groupId>com.aliyun.oss</groupId>
            <artifactId>aliyun-sdk-oss</artifactId>
            <version>2.5.0</version>
        </dependency>

        <dependency>
            <groupId>io.springfox</groupId>
            <artifactId>springfox-swagger-ui</artifactId>
            <version>2.8.0</version>
        </dependency>

        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter</artifactId>
        </dependency>

        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-web</artifactId>
        </dependency>

        <!--导入切面场景-->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-aop</artifactId>
        </dependency>

        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-test</artifactId>
            <scope>test</scope>
        </dependency>
    </dependencies>

    <build>

        <!--docker打包插件配两个-->
        <!--1、finalName：项目名
            2、configuration：配置好信息
                imageName：基础镜像
                entryPoint：镜像的启动命令
                resources：打包的资源
        -->
        <finalName>gmall-admin-web</finalName>
        <plugins>
            <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
            </plugin>


            <!--docker打包插件-->
            <!--从环境变量中获取一个名为DOCKER_HOST  值为tcp://192.168.159.128:2375-->
            <plugin>
                <groupId>com.spotify</groupId>
                <artifactId>docker-maven-plugin</artifactId>
                <version>1.2.0</version>

                <configuration>
                    <!--这是镜像名，docker images显示出来的名字-->
                    <imageName>gmall/${project.build.finalName}</imageName>
                    <!--这个jdk镜像稳定，容易下载来，官方的java以及openjdk都有问题 -->
                   <!-- <baseImage>anapsix/alpine-java</baseImage>-->
                    <!--指定 Dockerfile 路径;${basedir}指的是当前项目根路径-->
                    <dockerDirectory>${basedir}/docker</dockerDirectory>
                    <!--<entryPoint>["java","-jar","/${project.build.finalName}.jar"]</entryPoint>-->
                    <resources>
                        <resource>
                            <targetPath>/</targetPath>
                            <directory>${project.build.directory}</directory>
                            <include>${project.build.finalName}.jar</include>
                        </resource>
                    </resources>
                </configuration>
            </plugin>

        </plugins>
    </build>


</project>
